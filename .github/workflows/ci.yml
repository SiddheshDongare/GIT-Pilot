name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh

    - name: Create virtual environment
      run: uv venv

    - name: Activate virtual environment
      run: |
        source .venv/bin/activate
        which python
        which pip

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~/.cache/uv
        key: ${{ runner.os }}-deps-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-deps-

    - name: Install dependencies
      run: |
        source .venv/bin/activate
        uv pip install -r requirements.txt
        uv pip install pytest pytest-cov black mypy flake8 safety

    - name: Check dependencies for known vulnerabilities
      run: |
        source .venv/bin/activate
        safety scan

    - name: Run black
      run: black . --check

    - name: Run flake8
      run: flake8 . --count --max-line-length=88 --statistics

    - name: Run mypy
      run: mypy .

    - name: Run tests
      run: |
        pytest --cov=./ --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Run Bandit
      run: |
        pip install bandit
        bandit -r . -c pyproject.toml

  dependency-updates:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Check for outdated dependencies
      run: |
        pip install pip-tools
        pip-compile --dry-run --upgrade requirements.txt --output-file requirements.new.txt
        diff requirements.txt requirements.new.txt || true

  release:
    needs: [test, security]
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Build package
      run: |
        pip install build
        python -m build

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.whl
          dist/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
